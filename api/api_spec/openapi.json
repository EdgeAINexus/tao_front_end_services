{
    "components": {
        "headers": {
            "Access-Control-Allow-Origin": {
                "description": "Origins that are allowed to share response",
                "schema": {
                    "format": "regex",
                    "maxLength": 9223372036854775807,
                    "type": "string"
                }
            },
            "X-RateLimit-Limit": {
                "description": "The number of allowed requests in the current period",
                "schema": {
                    "format": "int64",
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "type": "integer"
                }
            }
        },
        "schemas": {
            "AutoML": {
                "properties": {
                    "automl_R": {
                        "format": "int64",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "nullable": true,
                        "type": "integer"
                    },
                    "automl_add_hyperparameters": {
                        "format": "regex",
                        "maxLength": 5000,
                        "nullable": true,
                        "type": "string"
                    },
                    "automl_algorithm": {
                        "enum": [
                            "bayesian",
                            "hyperband"
                        ],
                        "nullable": true,
                        "type": "string"
                    },
                    "automl_delete_intermediate_ckpt": {
                        "nullable": true,
                        "type": "boolean"
                    },
                    "automl_enabled": {
                        "nullable": true,
                        "type": "boolean"
                    },
                    "automl_max_recommendations": {
                        "format": "int64",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "nullable": true,
                        "type": "integer"
                    },
                    "automl_nu": {
                        "format": "int64",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "nullable": true,
                        "type": "integer"
                    },
                    "automl_remove_hyperparameters": {
                        "format": "regex",
                        "maxLength": 5000,
                        "nullable": true,
                        "type": "string"
                    },
                    "epoch_multiplier": {
                        "format": "int64",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "nullable": true,
                        "type": "integer"
                    },
                    "override_automl_disabled_params": {
                        "nullable": true,
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "AutoMLResults": {
                "properties": {
                    "metric": {},
                    "value": {
                        "nullable": true,
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "BaseExperimentMetadata": {
                "properties": {
                    "backbone_class": {
                        "format": "regex",
                        "maxLength": 1000,
                        "nullable": true,
                        "type": "string"
                    },
                    "backbone_type": {
                        "format": "regex",
                        "maxLength": 1000,
                        "nullable": true,
                        "type": "string"
                    },
                    "domain": {
                        "format": "regex",
                        "maxLength": 1000,
                        "nullable": true,
                        "type": "string"
                    },
                    "is_backbone": {
                        "type": "boolean"
                    },
                    "is_trainable": {
                        "type": "boolean"
                    },
                    "license": {
                        "format": "regex",
                        "maxLength": 1000,
                        "nullable": true,
                        "type": "string"
                    },
                    "model_card_link": {
                        "format": "url",
                        "maxLength": 2048,
                        "nullable": true,
                        "type": "string"
                    },
                    "spec_file_present": {
                        "type": "boolean"
                    },
                    "task": {
                        "format": "regex",
                        "maxLength": 1000,
                        "nullable": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Category": {
                "properties": {
                    "category_wise_values": {
                        "items": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/CategoryWise"
                                }
                            ],
                            "nullable": true
                        },
                        "maxItems": 9223372036854775807,
                        "type": "array"
                    },
                    "metric": {}
                },
                "type": "object"
            },
            "CategoryWise": {
                "properties": {
                    "category": {
                        "format": "regex",
                        "maxLength": 500,
                        "type": "string"
                    },
                    "value": {
                        "nullable": true,
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "DatasetActions": {
                "properties": {
                    "action": {
                        "enum": [
                            "dataset_convert",
                            "convert",
                            "convert_efficientdet_tf2",
                            "train",
                            "evaluate",
                            "prune",
                            "retrain",
                            "export",
                            "gen_trt_engine",
                            "trtexec",
                            "inference",
                            "batchinfer",
                            "augment",
                            "annotation_format_convert",
                            "analyze",
                            "validate",
                            "generate",
                            "calibration_tensorfile",
                            "annotation",
                            "nextimage",
                            "cacheimage",
                            "notify",
                            "auto3dseg"
                        ],
                        "type": "string"
                    },
                    "description": {
                        "format": "regex",
                        "maxLength": 1000,
                        "nullable": true,
                        "type": "string"
                    },
                    "name": {
                        "format": "regex",
                        "maxLength": 500,
                        "nullable": true,
                        "type": "string"
                    },
                    "num_gpu": {
                        "format": "int64",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "nullable": true,
                        "type": "integer"
                    },
                    "parent_job_id": {
                        "format": "uuid",
                        "maxLength": 36,
                        "nullable": true,
                        "type": "string"
                    },
                    "platform": {
                        "enum": [
                            "t4",
                            "l4",
                            "l40",
                            "a10",
                            "a30",
                            "a40",
                            "a100",
                            "v100"
                        ],
                        "nullable": true,
                        "type": "string"
                    },
                    "specs": {}
                },
                "type": "object"
            },
            "DatasetJob": {
                "properties": {
                    "action": {
                        "enum": [
                            "dataset_convert",
                            "convert",
                            "convert_efficientdet_tf2",
                            "train",
                            "evaluate",
                            "prune",
                            "retrain",
                            "export",
                            "gen_trt_engine",
                            "trtexec",
                            "inference",
                            "batchinfer",
                            "augment",
                            "annotation_format_convert",
                            "analyze",
                            "validate",
                            "generate",
                            "calibration_tensorfile",
                            "annotation",
                            "nextimage",
                            "cacheimage",
                            "notify",
                            "auto3dseg"
                        ],
                        "type": "string"
                    },
                    "created_on": {
                        "format": "date-time",
                        "maxLength": 26,
                        "type": "string"
                    },
                    "dataset_id": {
                        "format": "uuid",
                        "maxLength": 36,
                        "nullable": true,
                        "type": "string"
                    },
                    "description": {
                        "format": "regex",
                        "maxLength": 1000,
                        "nullable": true,
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "maxLength": 36,
                        "type": "string"
                    },
                    "last_modified": {
                        "format": "date-time",
                        "maxLength": 26,
                        "type": "string"
                    },
                    "name": {
                        "format": "regex",
                        "maxLength": 500,
                        "nullable": true,
                        "type": "string"
                    },
                    "num_gpu": {
                        "format": "int64",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "nullable": true,
                        "type": "integer"
                    },
                    "parent_id": {
                        "format": "uuid",
                        "maxLength": 36,
                        "nullable": true,
                        "type": "string"
                    },
                    "platform": {
                        "enum": [
                            "t4",
                            "l4",
                            "l40",
                            "a10",
                            "a30",
                            "a40",
                            "a100",
                            "v100"
                        ],
                        "nullable": true,
                        "type": "string"
                    },
                    "result": {
                        "$ref": "#/components/schemas/JobResult"
                    },
                    "specs": {
                        "nullable": true
                    },
                    "status": {
                        "enum": [
                            "Done",
                            "Running",
                            "Error",
                            "Pending",
                            "Canceled",
                            "Canceling",
                            "Pausing",
                            "Paused",
                            "Resuming"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DatasetJobList": {
                "properties": {
                    "jobs": {
                        "items": {
                            "$ref": "#/components/schemas/DatasetJob"
                        },
                        "maxItems": 9223372036854775807,
                        "type": "array"
                    },
                    "pagination_info": {
                        "$ref": "#/components/schemas/PaginationInfo"
                    }
                },
                "type": "object"
            },
            "DatasetListRsp": {
                "properties": {
                    "datasets": {
                        "items": {
                            "$ref": "#/components/schemas/DatasetRsp"
                        },
                        "maxItems": 9223372036854775807,
                        "type": "array"
                    },
                    "pagination_info": {
                        "$ref": "#/components/schemas/PaginationInfo"
                    }
                },
                "type": "object"
            },
            "DatasetReq": {
                "properties": {
                    "client_id": {
                        "format": "regex",
                        "maxLength": 2048,
                        "nullable": true,
                        "type": "string"
                    },
                    "client_secret": {
                        "format": "regex",
                        "maxLength": 2048,
                        "nullable": true,
                        "type": "string"
                    },
                    "client_url": {
                        "format": "regex",
                        "maxLength": 2048,
                        "nullable": true,
                        "type": "string"
                    },
                    "cloud_file_path": {
                        "format": "regex",
                        "maxLength": 2048,
                        "nullable": true,
                        "type": "string"
                    },
                    "description": {
                        "format": "regex",
                        "maxLength": 1000,
                        "type": "string"
                    },
                    "docker_env_vars": {
                        "additionalProperties": {
                            "format": "regex",
                            "maxLength": 500,
                            "nullable": true,
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "filters": {
                        "format": "regex",
                        "maxLength": 2048,
                        "nullable": true,
                        "type": "string"
                    },
                    "format": {
                        "enum": [
                            "kitti",
                            "pascal_voc",
                            "raw",
                            "coco_raw",
                            "unet",
                            "coco",
                            "lprnet",
                            "train",
                            "test",
                            "default",
                            "custom",
                            "classification_pyt",
                            "classification_tf2",
                            "visual_changenet_segment",
                            "visual_changenet_classify",
                            "medical"
                        ],
                        "type": "string"
                    },
                    "logo": {
                        "format": "url",
                        "maxLength": 2048,
                        "type": "string"
                    },
                    "name": {
                        "format": "regex",
                        "maxLength": 500,
                        "type": "string"
                    },
                    "status": {
                        "enum": [
                            "starting",
                            "in_progress",
                            "pull_complete",
                            "invalid_pull"
                        ],
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "object_detection",
                            "semantic_segmentation",
                            "image_classification",
                            "instance_segmentation",
                            "character_recognition",
                            "action_recognition",
                            "pointpillars",
                            "pose_classification",
                            "ml_recog",
                            "ocdnet",
                            "ocrnet",
                            "optical_inspection",
                            "re_identification",
                            "visual_changenet",
                            "centerpose",
                            "not_restricted",
                            "user_custom"
                        ],
                        "type": "string"
                    },
                    "url": {
                        "format": "url",
                        "maxLength": 2048,
                        "type": "string"
                    },
                    "use_for": {
                        "items": {
                            "enum": [
                                "training",
                                "evaluation",
                                "testing"
                            ],
                            "type": "string"
                        },
                        "maxItems": 3,
                        "nullable": true,
                        "type": "array"
                    },
                    "user_id": {
                        "format": "uuid",
                        "maxLength": 36,
                        "type": "string"
                    },
                    "version": {
                        "format": "regex",
                        "maxLength": 10,
                        "type": "string"
                    },
                    "workspace": {
                        "format": "uuid",
                        "maxLength": 36,
                        "nullable": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DatasetRsp": {
                "properties": {
                    "actions": {
                        "items": {
                            "enum": [
                                "dataset_convert",
                                "convert",
                                "convert_efficientdet_tf2",
                                "train",
                                "evaluate",
                                "prune",
                                "retrain",
                                "export",
                                "gen_trt_engine",
                                "trtexec",
                                "inference",
                                "batchinfer",
                                "augment",
                                "annotation_format_convert",
                                "analyze",
                                "validate",
                                "generate",
                                "calibration_tensorfile",
                                "annotation",
                                "nextimage",
                                "cacheimage",
                                "notify",
                                "auto3dseg"
                            ],
                            "type": "string"
                        },
                        "maxItems": 9223372036854775807,
                        "nullable": true,
                        "type": "array"
                    },
                    "client_id": {
                        "format": "regex",
                        "maxLength": 2048,
                        "nullable": true,
                        "type": "string",
                        "writeOnly": true
                    },
                    "client_secret": {
                        "format": "regex",
                        "maxLength": 2048,
                        "nullable": true,
                        "type": "string",
                        "writeOnly": true
                    },
                    "client_url": {
                        "format": "regex",
                        "maxLength": 2048,
                        "nullable": true,
                        "type": "string"
                    },
                    "cloud_file_path": {
                        "format": "regex",
                        "maxLength": 2048,
                        "nullable": true,
                        "type": "string"
                    },
                    "created_on": {
                        "format": "date-time",
                        "maxLength": 26,
                        "type": "string"
                    },
                    "description": {
                        "format": "regex",
                        "maxLength": 1000,
                        "type": "string"
                    },
                    "docker_env_vars": {
                        "additionalProperties": {
                            "format": "regex",
                            "maxLength": 500,
                            "nullable": true,
                            "type": "string"
                        },
                        "type": "object",
                        "writeOnly": true
                    },
                    "filters": {
                        "format": "regex",
                        "maxLength": 2048,
                        "nullable": true,
                        "type": "string",
                        "writeOnly": true
                    },
                    "format": {
                        "enum": [
                            "kitti",
                            "pascal_voc",
                            "raw",
                            "coco_raw",
                            "unet",
                            "coco",
                            "lprnet",
                            "train",
                            "test",
                            "default",
                            "custom",
                            "classification_pyt",
                            "classification_tf2",
                            "visual_changenet_segment",
                            "visual_changenet_classify",
                            "medical"
                        ],
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "maxLength": 36,
                        "type": "string"
                    },
                    "jobs": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/DatasetJob"
                        },
                        "maxLength": 9223372036854775807,
                        "type": "object"
                    },
                    "last_modified": {
                        "format": "date-time",
                        "maxLength": 26,
                        "type": "string"
                    },
                    "logo": {
                        "format": "url",
                        "maxLength": 2048,
                        "nullable": true,
                        "type": "string"
                    },
                    "name": {
                        "format": "regex",
                        "maxLength": 500,
                        "type": "string"
                    },
                    "status": {
                        "enum": [
                            "starting",
                            "in_progress",
                            "pull_complete",
                            "invalid_pull"
                        ],
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "object_detection",
                            "semantic_segmentation",
                            "image_classification",
                            "instance_segmentation",
                            "character_recognition",
                            "action_recognition",
                            "pointpillars",
                            "pose_classification",
                            "ml_recog",
                            "ocdnet",
                            "ocrnet",
                            "optical_inspection",
                            "re_identification",
                            "visual_changenet",
                            "centerpose",
                            "not_restricted",
                            "user_custom"
                        ],
                        "type": "string"
                    },
                    "url": {
                        "format": "url",
                        "maxLength": 2048,
                        "nullable": true,
                        "type": "string"
                    },
                    "use_for": {
                        "items": {
                            "enum": [
                                "training",
                                "evaluation",
                                "testing"
                            ],
                            "type": "string"
                        },
                        "maxItems": 3,
                        "nullable": true,
                        "type": "array"
                    },
                    "user_id": {
                        "format": "uuid",
                        "maxLength": 36,
                        "type": "string",
                        "writeOnly": true
                    },
                    "version": {
                        "format": "regex",
                        "maxLength": 10,
                        "type": "string"
                    },
                    "workspace": {
                        "format": "uuid",
                        "maxLength": 36,
                        "nullable": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DetailedStatus": {
                "properties": {
                    "date": {
                        "format": "mm/dd/yyyy",
                        "maxLength": 26,
                        "type": "string"
                    },
                    "message": {
                        "format": "regex",
                        "maxLength": 6400,
                        "type": "string"
                    },
                    "status": {
                        "format": "regex",
                        "maxLength": 100,
                        "type": "string"
                    },
                    "time": {
                        "format": "hh:mm:ss",
                        "maxLength": 26,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ErrorRsp": {
                "properties": {
                    "error_code": {
                        "format": "int64",
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "type": "integer"
                    },
                    "error_desc": {
                        "format": "regex",
                        "maxLength": 1000,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ExperimentActions": {
                "properties": {
                    "action": {
                        "enum": [
                            "dataset_convert",
                            "convert",
                            "convert_efficientdet_tf2",
                            "train",
                            "evaluate",
                            "prune",
                            "retrain",
                            "export",
                            "gen_trt_engine",
                            "trtexec",
                            "inference",
                            "batchinfer",
                            "augment",
                            "annotation_format_convert",
                            "analyze",
                            "validate",
                            "generate",
                            "calibration_tensorfile",
                            "annotation",
                            "nextimage",
                            "cacheimage",
                            "notify",
                            "auto3dseg"
                        ],
                        "type": "string"
                    },
                    "description": {
                        "format": "regex",
                        "maxLength": 1000,
                        "nullable": true,
                        "type": "string"
                    },
                    "name": {
                        "format": "regex",
                        "maxLength": 500,
                        "nullable": true,
                        "type": "string"
                    },
                    "num_gpu": {
                        "format": "int64",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "nullable": true,
                        "type": "integer"
                    },
                    "parent_job_id": {
                        "format": "uuid",
                        "maxLength": 36,
                        "nullable": true,
                        "type": "string"
                    },
                    "platform": {
                        "enum": [
                            "t4",
                            "l4",
                            "l40",
                            "a10",
                            "a30",
                            "a40",
                            "a100",
                            "v100"
                        ],
                        "nullable": true,
                        "type": "string"
                    },
                    "specs": {}
                },
                "type": "object"
            },
            "ExperimentJob": {
                "properties": {
                    "action": {
                        "enum": [
                            "dataset_convert",
                            "convert",
                            "convert_efficientdet_tf2",
                            "train",
                            "evaluate",
                            "prune",
                            "retrain",
                            "export",
                            "gen_trt_engine",
                            "trtexec",
                            "inference",
                            "batchinfer",
                            "augment",
                            "annotation_format_convert",
                            "analyze",
                            "validate",
                            "generate",
                            "calibration_tensorfile",
                            "annotation",
                            "nextimage",
                            "cacheimage",
                            "notify",
                            "auto3dseg"
                        ],
                        "type": "string"
                    },
                    "created_on": {
                        "format": "date-time",
                        "maxLength": 26,
                        "type": "string"
                    },
                    "description": {
                        "format": "regex",
                        "maxLength": 1000,
                        "nullable": true,
                        "type": "string"
                    },
                    "experiment_id": {
                        "format": "uuid",
                        "maxLength": 36,
                        "nullable": true,
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "maxLength": 36,
                        "type": "string"
                    },
                    "last_modified": {
                        "format": "date-time",
                        "maxLength": 26,
                        "type": "string"
                    },
                    "name": {
                        "format": "regex",
                        "maxLength": 500,
                        "nullable": true,
                        "type": "string"
                    },
                    "num_gpu": {
                        "format": "int64",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "nullable": true,
                        "type": "integer"
                    },
                    "parent_id": {
                        "format": "uuid",
                        "maxLength": 36,
                        "nullable": true,
                        "type": "string"
                    },
                    "platform": {
                        "enum": [
                            "t4",
                            "l4",
                            "l40",
                            "a10",
                            "a30",
                            "a40",
                            "a100",
                            "v100"
                        ],
                        "nullable": true,
                        "type": "string"
                    },
                    "result": {
                        "$ref": "#/components/schemas/JobResult"
                    },
                    "specs": {
                        "nullable": true
                    },
                    "status": {
                        "enum": [
                            "Done",
                            "Running",
                            "Error",
                            "Pending",
                            "Canceled",
                            "Canceling",
                            "Pausing",
                            "Paused",
                            "Resuming"
                        ],
                        "type": "string"
                    },
                    "sync": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ExperimentJobList": {
                "properties": {
                    "jobs": {
                        "items": {
                            "$ref": "#/components/schemas/ExperimentJob"
                        },
                        "maxItems": 9223372036854775807,
                        "type": "array"
                    },
                    "pagination_info": {
                        "$ref": "#/components/schemas/PaginationInfo"
                    }
                },
                "type": "object"
            },
            "ExperimentListRsp": {
                "properties": {
                    "experiments": {
                        "items": {
                            "$ref": "#/components/schemas/ExperimentRsp"
                        },
                        "maxItems": 9223372036854775807,
                        "type": "array"
                    },
                    "pagination_info": {
                        "$ref": "#/components/schemas/PaginationInfo"
                    }
                },
                "type": "object"
            },
            "ExperimentReq": {
                "properties": {
                    "additional_id_info": {
                        "format": "regex",
                        "maxLength": 100,
                        "nullable": true,
                        "type": "string"
                    },
                    "automl_settings": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AutoML"
                            }
                        ],
                        "nullable": true
                    },
                    "base_experiment": {
                        "items": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        },
                        "maxItems": 2,
                        "type": "array"
                    },
                    "base_experiment_pull_complete": {
                        "enum": [
                            "starting",
                            "in_progress",
                            "pull_complete",
                            "invalid_pull"
                        ],
                        "type": "string"
                    },
                    "bundle_url": {
                        "format": "regex",
                        "maxLength": 1000,
                        "nullable": true,
                        "type": "string"
                    },
                    "calibration_dataset": {
                        "format": "uuid",
                        "maxLength": 36,
                        "type": "string"
                    },
                    "checkpoint_choose_method": {
                        "enum": [
                            "latest_model",
                            "best_model",
                            "from_epoch_number"
                        ],
                        "type": "string"
                    },
                    "checkpoint_epoch_number": {
                        "additionalProperties": {
                            "format": "int64",
                            "maximum": 9223372036854775807,
                            "minimum": 0,
                            "nullable": true,
                            "type": "integer"
                        },
                        "type": "object"
                    },
                    "description": {
                        "format": "regex",
                        "maxLength": 1000,
                        "type": "string"
                    },
                    "docker_env_vars": {
                        "additionalProperties": {
                            "format": "regex",
                            "maxLength": 500,
                            "nullable": true,
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "encryption_key": {
                        "format": "regex",
                        "maxLength": 100,
                        "type": "string"
                    },
                    "eval_dataset": {
                        "format": "uuid",
                        "maxLength": 36,
                        "type": "string"
                    },
                    "inference_dataset": {
                        "format": "uuid",
                        "maxLength": 36,
                        "type": "string"
                    },
                    "logo": {
                        "format": "url",
                        "maxLength": 2048,
                        "type": "string"
                    },
                    "metric": {
                        "format": "regex",
                        "maxLength": 100,
                        "nullable": true,
                        "type": "string"
                    },
                    "model_description": {
                        "format": "regex",
                        "maxLength": 1000,
                        "type": "string"
                    },
                    "model_params": {
                        "nullable": true,
                        "type": "object"
                    },
                    "name": {
                        "format": "regex",
                        "maxLength": 500,
                        "type": "string"
                    },
                    "network_arch": {
                        "enum": [
                            "detectnet_v2",
                            "unet",
                            "classification_tf2",
                            "efficientdet_tf2",
                            "action_recognition",
                            "classification_pyt",
                            "mal",
                            "ml_recog",
                            "ocdnet",
                            "ocrnet",
                            "optical_inspection",
                            "pointpillars",
                            "pose_classification",
                            "re_identification",
                            "deformable_detr",
                            "dino",
                            "segformer",
                            "visual_changenet",
                            "centerpose",
                            "auto_label",
                            "image",
                            "medical_vista3d",
                            "medical_vista2d",
                            "medical_segmentation",
                            "medical_annotation",
                            "medical_classification",
                            "medical_detection",
                            "medical_automl",
                            "medical_custom",
                            "medical_genai",
                            "medical_maisi",
                            "medical_automl_generated"
                        ],
                        "type": "string"
                    },
                    "ngc_path": {
                        "format": "regex",
                        "maxLength": 250,
                        "type": "string"
                    },
                    "public": {
                        "type": "boolean"
                    },
                    "read_only": {
                        "type": "boolean"
                    },
                    "realtime_infer": {
                        "type": "boolean"
                    },
                    "realtime_infer_request_timeout": {
                        "format": "int64",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "nullable": true,
                        "type": "integer"
                    },
                    "sha256_digest": {
                        "nullable": true,
                        "type": "object"
                    },
                    "tags": {
                        "items": {
                            "format": "regex",
                            "maxLength": 500,
                            "type": "string"
                        },
                        "maxItems": 9223372036854775807,
                        "type": "array"
                    },
                    "train_datasets": {
                        "items": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        },
                        "maxItems": 9223372036854775807,
                        "type": "array"
                    },
                    "type": {
                        "enum": [
                            "vision",
                            "medical"
                        ],
                        "type": "string"
                    },
                    "user_id": {
                        "format": "uuid",
                        "maxLength": 36,
                        "type": "string"
                    },
                    "version": {
                        "format": "regex",
                        "maxLength": 500,
                        "type": "string"
                    },
                    "workspace": {
                        "format": "uuid",
                        "maxLength": 36,
                        "nullable": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ExperimentRsp": {
                "properties": {
                    "accepted_dataset_intents": {
                        "items": {
                            "enum": [
                                "training",
                                "evaluation",
                                "testing"
                            ],
                            "type": "string"
                        },
                        "maxItems": 9223372036854775807,
                        "nullable": true,
                        "type": "array"
                    },
                    "actions": {
                        "items": {
                            "enum": [
                                "dataset_convert",
                                "convert",
                                "convert_efficientdet_tf2",
                                "train",
                                "evaluate",
                                "prune",
                                "retrain",
                                "export",
                                "gen_trt_engine",
                                "trtexec",
                                "inference",
                                "batchinfer",
                                "augment",
                                "annotation_format_convert",
                                "analyze",
                                "validate",
                                "generate",
                                "calibration_tensorfile",
                                "annotation",
                                "nextimage",
                                "cacheimage",
                                "notify",
                                "auto3dseg"
                            ],
                            "type": "string"
                        },
                        "maxItems": 9223372036854775807,
                        "nullable": true,
                        "type": "array"
                    },
                    "additional_id_info": {
                        "format": "regex",
                        "maxLength": 100,
                        "nullable": true,
                        "type": "string"
                    },
                    "all_jobs_cancel_status": {
                        "enum": [
                            "Done",
                            "Running",
                            "Error",
                            "Pending",
                            "Canceled",
                            "Canceling",
                            "Pausing",
                            "Paused",
                            "Resuming"
                        ],
                        "nullable": true,
                        "type": "string"
                    },
                    "automl_settings": {
                        "$ref": "#/components/schemas/AutoML"
                    },
                    "base_experiment": {
                        "items": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        },
                        "maxItems": 2,
                        "type": "array"
                    },
                    "base_experiment_metadata": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/BaseExperimentMetadata"
                            }
                        ],
                        "nullable": true
                    },
                    "base_experiment_pull_complete": {
                        "enum": [
                            "starting",
                            "in_progress",
                            "pull_complete",
                            "invalid_pull"
                        ],
                        "type": "string"
                    },
                    "bundle_url": {
                        "format": "regex",
                        "maxLength": 1000,
                        "nullable": true,
                        "type": "string"
                    },
                    "calibration_dataset": {
                        "format": "uuid",
                        "maxLength": 36,
                        "nullable": true,
                        "type": "string"
                    },
                    "checkpoint_choose_method": {
                        "enum": [
                            "latest_model",
                            "best_model",
                            "from_epoch_number"
                        ],
                        "type": "string"
                    },
                    "checkpoint_epoch_number": {
                        "additionalProperties": {
                            "format": "int64",
                            "maximum": 9223372036854775807,
                            "minimum": 0,
                            "nullable": true,
                            "type": "integer"
                        },
                        "type": "object"
                    },
                    "created_on": {
                        "format": "date-time",
                        "maxLength": 26,
                        "type": "string"
                    },
                    "dataset_formats": {
                        "items": {
                            "enum": [
                                "kitti",
                                "pascal_voc",
                                "raw",
                                "coco_raw",
                                "unet",
                                "coco",
                                "lprnet",
                                "train",
                                "test",
                                "default",
                                "custom",
                                "classification_pyt",
                                "classification_tf2",
                                "visual_changenet_segment",
                                "visual_changenet_classify",
                                "medical"
                            ],
                            "type": "string"
                        },
                        "maxItems": 9223372036854775807,
                        "nullable": true,
                        "type": "array"
                    },
                    "dataset_type": {
                        "enum": [
                            "object_detection",
                            "semantic_segmentation",
                            "image_classification",
                            "instance_segmentation",
                            "character_recognition",
                            "action_recognition",
                            "pointpillars",
                            "pose_classification",
                            "ml_recog",
                            "ocdnet",
                            "ocrnet",
                            "optical_inspection",
                            "re_identification",
                            "visual_changenet",
                            "centerpose",
                            "not_restricted",
                            "user_custom"
                        ],
                        "type": "string"
                    },
                    "description": {
                        "format": "regex",
                        "maxLength": 1000,
                        "type": "string"
                    },
                    "docker_env_vars": {
                        "additionalProperties": {
                            "format": "regex",
                            "maxLength": 500,
                            "nullable": true,
                            "type": "string"
                        },
                        "type": "object",
                        "writeOnly": true
                    },
                    "encryption_key": {
                        "format": "regex",
                        "maxLength": 100,
                        "type": "string"
                    },
                    "eval_dataset": {
                        "format": "uuid",
                        "maxLength": 36,
                        "nullable": true,
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "maxLength": 36,
                        "type": "string"
                    },
                    "inference_dataset": {
                        "format": "uuid",
                        "maxLength": 36,
                        "nullable": true,
                        "type": "string"
                    },
                    "jobs": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExperimentJob"
                        },
                        "maxLength": 9223372036854775807,
                        "type": "object"
                    },
                    "last_modified": {
                        "format": "date-time",
                        "maxLength": 26,
                        "type": "string"
                    },
                    "logo": {
                        "format": "url",
                        "maxLength": 2048,
                        "nullable": true,
                        "type": "string"
                    },
                    "metric": {
                        "format": "regex",
                        "maxLength": 100,
                        "nullable": true,
                        "type": "string"
                    },
                    "model_description": {
                        "format": "regex",
                        "maxLength": 1000,
                        "type": "string"
                    },
                    "model_params": {
                        "nullable": true,
                        "type": "object"
                    },
                    "name": {
                        "format": "regex",
                        "maxLength": 500,
                        "type": "string"
                    },
                    "network_arch": {
                        "enum": [
                            "detectnet_v2",
                            "unet",
                            "classification_tf2",
                            "efficientdet_tf2",
                            "action_recognition",
                            "classification_pyt",
                            "mal",
                            "ml_recog",
                            "ocdnet",
                            "ocrnet",
                            "optical_inspection",
                            "pointpillars",
                            "pose_classification",
                            "re_identification",
                            "deformable_detr",
                            "dino",
                            "segformer",
                            "visual_changenet",
                            "centerpose",
                            "auto_label",
                            "image",
                            "medical_vista3d",
                            "medical_vista2d",
                            "medical_segmentation",
                            "medical_annotation",
                            "medical_classification",
                            "medical_detection",
                            "medical_automl",
                            "medical_custom",
                            "medical_genai",
                            "medical_maisi",
                            "medical_automl_generated"
                        ],
                        "type": "string"
                    },
                    "ngc_path": {
                        "format": "regex",
                        "maxLength": 250,
                        "type": "string"
                    },
                    "public": {
                        "type": "boolean"
                    },
                    "read_only": {
                        "type": "boolean"
                    },
                    "realtime_infer": {
                        "nullable": true,
                        "type": "boolean"
                    },
                    "realtime_infer_endpoint": {
                        "format": "regex",
                        "maxLength": 1000,
                        "nullable": true,
                        "type": "string",
                        "writeOnly": true
                    },
                    "realtime_infer_model_name": {
                        "format": "regex",
                        "maxLength": 1000,
                        "nullable": true,
                        "type": "string",
                        "writeOnly": true
                    },
                    "realtime_infer_request_timeout": {
                        "format": "int64",
                        "maximum": 86400,
                        "minimum": 0,
                        "nullable": true,
                        "type": "integer"
                    },
                    "realtime_infer_support": {
                        "type": "boolean"
                    },
                    "sha256_digest": {
                        "nullable": true,
                        "type": "object"
                    },
                    "tags": {
                        "items": {
                            "format": "regex",
                            "maxLength": 500,
                            "type": "string"
                        },
                        "maxItems": 9223372036854775807,
                        "type": "array"
                    },
                    "train_datasets": {
                        "items": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        },
                        "maxItems": 9223372036854775807,
                        "type": "array"
                    },
                    "type": {
                        "enum": [
                            "vision",
                            "medical"
                        ],
                        "nullable": true,
                        "type": "string"
                    },
                    "user_id": {
                        "format": "uuid",
                        "maxLength": 36,
                        "type": "string",
                        "writeOnly": true
                    },
                    "version": {
                        "format": "regex",
                        "maxLength": 500,
                        "type": "string"
                    },
                    "workspace": {
                        "format": "uuid",
                        "maxLength": 36,
                        "nullable": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Graph": {
                "properties": {
                    "metric": {},
                    "units": {
                        "format": "regex",
                        "maxLength": 100,
                        "nullable": true,
                        "type": "string"
                    },
                    "values": {
                        "additionalProperties": {
                            "nullable": true,
                            "type": "number"
                        },
                        "type": "object"
                    },
                    "x_max": {
                        "format": "int64",
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "nullable": true,
                        "type": "integer"
                    },
                    "x_min": {
                        "format": "int64",
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "nullable": true,
                        "type": "integer"
                    },
                    "y_max": {
                        "nullable": true,
                        "type": "number"
                    },
                    "y_min": {
                        "nullable": true,
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "JobResult": {
                "properties": {
                    "automl_experiment_epoch": {
                        "format": "int64",
                        "maximum": 9223372036854775807,
                        "minimum": -1,
                        "nullable": true,
                        "type": "integer"
                    },
                    "automl_experiment_max_epoch": {
                        "format": "int64",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "nullable": true,
                        "type": "integer"
                    },
                    "automl_result": {
                        "items": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/AutoMLResults"
                                }
                            ],
                            "nullable": true
                        },
                        "maxItems": 9223372036854775807,
                        "type": "array"
                    },
                    "categorical": {
                        "items": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/Category"
                                }
                            ],
                            "nullable": true
                        },
                        "maxItems": 9223372036854775807,
                        "type": "array"
                    },
                    "cur_iter": {
                        "format": "int64",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "nullable": true,
                        "type": "integer"
                    },
                    "detailed_status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DetailedStatus"
                            }
                        ],
                        "nullable": true
                    },
                    "epoch": {
                        "format": "int64",
                        "maximum": 9223372036854775807,
                        "minimum": -1,
                        "nullable": true,
                        "type": "integer"
                    },
                    "eta": {
                        "format": "regex",
                        "maxLength": 9223372036854775807,
                        "nullable": true,
                        "type": "string"
                    },
                    "graphical": {
                        "items": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/Graph"
                                }
                            ],
                            "nullable": true
                        },
                        "maxItems": 9223372036854775807,
                        "type": "array"
                    },
                    "key_metric": {
                        "nullable": true,
                        "type": "number"
                    },
                    "kpi": {
                        "items": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/KPI"
                                }
                            ],
                            "nullable": true
                        },
                        "maxItems": 9223372036854775807,
                        "type": "array"
                    },
                    "max_epoch": {
                        "format": "int64",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "nullable": true,
                        "type": "integer"
                    },
                    "message": {
                        "format": "regex",
                        "maxLength": 9223372036854775807,
                        "nullable": true,
                        "type": "string"
                    },
                    "starting_epoch": {
                        "format": "int64",
                        "maximum": 9223372036854775807,
                        "minimum": -1,
                        "nullable": true,
                        "type": "integer"
                    },
                    "stats": {
                        "items": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/Stats"
                                }
                            ],
                            "nullable": true
                        },
                        "maxItems": 9223372036854775807,
                        "type": "array"
                    },
                    "time_per_epoch": {
                        "format": "regex",
                        "maxLength": 9223372036854775807,
                        "nullable": true,
                        "type": "string"
                    },
                    "time_per_iter": {
                        "format": "regex",
                        "maxLength": 9223372036854775807,
                        "nullable": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "JobResume": {
                "properties": {
                    "parent_job_id": {
                        "format": "uuid",
                        "maxLength": 36,
                        "nullable": true,
                        "type": "string"
                    },
                    "specs": {
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "KPI": {
                "properties": {
                    "metric": {},
                    "values": {
                        "additionalProperties": {
                            "nullable": true,
                            "type": "number"
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "LoginReq": {
                "properties": {
                    "ngc_api_key": {
                        "format": "regex",
                        "maxLength": 1000,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "LoginRsp": {
                "properties": {
                    "token": {
                        "format": "regex",
                        "maxLength": 9223372036854775807,
                        "type": "string"
                    },
                    "user_id": {
                        "format": "uuid",
                        "maxLength": 36,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "LstStr": {
                "properties": {
                    "accepted_dataset_intents": {
                        "items": {
                            "enum": [
                                "training",
                                "evaluation",
                                "testing"
                            ],
                            "type": "string"
                        },
                        "maxItems": 3,
                        "nullable": true,
                        "type": "array"
                    },
                    "dataset_formats": {
                        "items": {
                            "format": "regex",
                            "maxLength": 500,
                            "nullable": true,
                            "type": "string"
                        },
                        "maxItems": 9223372036854775807,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "PaginationInfo": {
                "properties": {
                    "page_index": {
                        "format": "int64",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "type": "integer"
                    },
                    "page_size": {
                        "format": "int64",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "type": "integer"
                    },
                    "total_pages": {
                        "format": "int64",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "type": "integer"
                    },
                    "total_records": {
                        "format": "int64",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "PublishModel": {
                "properties": {
                    "description": {
                        "format": "regex",
                        "maxLength": 500,
                        "nullable": true,
                        "type": "string"
                    },
                    "display_name": {
                        "format": "regex",
                        "maxLength": 500,
                        "nullable": true,
                        "type": "string"
                    },
                    "team_name": {
                        "format": "regex",
                        "maxLength": 500,
                        "nullable": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Stats": {
                "properties": {
                    "metric": {
                        "format": "regex",
                        "maxLength": 100,
                        "nullable": true,
                        "type": "string"
                    },
                    "value": {
                        "format": "regex",
                        "maxLength": 9223372036854775807,
                        "nullable": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "WorkspaceReq": {
                "properties": {
                    "cloud_specific_details": {},
                    "cloud_type": {
                        "enum": [
                            "aws",
                            "azure",
                            "gcp",
                            "huggingface",
                            "self_hosted"
                        ],
                        "type": "string"
                    },
                    "name": {
                        "format": "regex",
                        "maxLength": 500,
                        "type": "string"
                    },
                    "version": {
                        "format": "regex",
                        "maxLength": 10,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "WorkspaceRsp": {
                "properties": {
                    "cloud_type": {
                        "enum": [
                            "aws",
                            "azure",
                            "gcp",
                            "huggingface",
                            "self_hosted"
                        ],
                        "type": "string"
                    },
                    "created_on": {
                        "format": "date-time",
                        "maxLength": 26,
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "maxLength": 36,
                        "type": "string"
                    },
                    "last_modified": {
                        "format": "date-time",
                        "maxLength": 26,
                        "type": "string"
                    },
                    "name": {
                        "format": "regex",
                        "maxLength": 500,
                        "type": "string"
                    },
                    "user_id": {
                        "format": "uuid",
                        "maxLength": 36,
                        "type": "string"
                    },
                    "version": {
                        "format": "regex",
                        "maxLength": 10,
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "api-key": {
                "in": "header",
                "name": "ngc_api_key",
                "type": "apiKey"
            },
            "bearer-token": {
                "bearerFormat": "JWT",
                "description": "RFC8725 Compliant JWT",
                "scheme": "bearer",
                "type": "http"
            }
        }
    },
    "info": {
        "description": "NVIDIA TAO (Train, Adapt, Optimize) API document",
        "title": "NVIDIA TAO API",
        "version": "5.5.0"
    },
    "openapi": "3.0.3",
    "paths": {
        "/api/v1/login": {
            "post": {
                "description": "Returns the user credentials",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginReq"
                            }
                        }
                    },
                    "description": "Login request with ngc_api_key",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginRsp"
                                }
                            }
                        },
                        "description": "Retuned the new Dataset",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "Unauthorized",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api-key": []
                    }
                ],
                "summary": "User Login",
                "tags": [
                    "AUTHENTICATION"
                ]
            }
        },
        "/api/v1/orgs/{org_name}/datasets": {
            "get": {
                "description": "Returns the list of Datasets",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional skip for pagination",
                        "in": "query",
                        "name": "skip",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "maximum": 2147483647,
                            "minimum": 0,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Optional size for pagination",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "maximum": 2147483647,
                            "minimum": 0,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Optional sort",
                        "in": "query",
                        "name": "sort",
                        "required": false,
                        "schema": {
                            "enum": [
                                "date-descending",
                                "date-ascending",
                                "name-descending",
                                "name-ascending"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional name filter",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "maxLength": 5000,
                            "pattern": ".*",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional format filter",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "enum": [
                                "kitti",
                                "pascal_voc",
                                "raw",
                                "coco_raw",
                                "unet",
                                "coco",
                                "lprnet",
                                "train",
                                "test",
                                "default",
                                "custom",
                                "classification_pyt",
                                "classification_tf2",
                                "visual_changenet_segment",
                                "visual_changenet_classify"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional type filter",
                        "in": "query",
                        "name": "type",
                        "required": false,
                        "schema": {
                            "enum": [
                                "object_detection",
                                "semantic_segmentation",
                                "image_classification",
                                "instance_segmentation",
                                "character_recognition",
                                "action_recognition",
                                "pointpillars",
                                "pose_classification",
                                "ml_recog",
                                "ocdnet",
                                "ocrnet",
                                "optical_inspection",
                                "re_identification",
                                "visual_changenet",
                                "centerpose"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DatasetListRsp"
                                }
                            }
                        },
                        "description": "Returned list of Datasets",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "List Datasets",
                "tags": [
                    "DATASET"
                ]
            },
            "post": {
                "description": "Returns the new Dataset",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DatasetReq"
                            }
                        }
                    },
                    "description": "Initial metadata for new Dataset (type and format required)",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DatasetRsp"
                                }
                            }
                        },
                        "description": "Returned the new Dataset",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "Bad request, see reply body for details",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "Create new Dataset",
                "tags": [
                    "DATASET"
                ]
            }
        },
        "/api/v1/orgs/{org_name}/datasets/{dataset_id}": {
            "delete": {
                "description": "Cancels all related running jobs and returns the deleted Dataset",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID of Dataset to delete",
                        "in": "path",
                        "name": "dataset_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DatasetRsp"
                                }
                            }
                        },
                        "description": "Deleted Dataset",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "Bad request, see reply body for details",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "User or Dataset not found",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "Delete Dataset",
                "tags": [
                    "DATASET"
                ]
            },
            "get": {
                "description": "Returns the Dataset",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID of Dataset to return",
                        "in": "path",
                        "name": "dataset_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DatasetRsp"
                                }
                            }
                        },
                        "description": "Returned Dataset",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "User or Dataset not found",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "Retrieve Dataset",
                "tags": [
                    "DATASET"
                ]
            },
            "patch": {
                "description": "Returns the updated Dataset",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID of Dataset to update",
                        "in": "path",
                        "name": "dataset_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DatasetReq"
                            }
                        }
                    },
                    "description": "Updated metadata for Dataset",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DatasetRsp"
                                }
                            }
                        },
                        "description": "Returned the updated Dataset",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "Bad request, see reply body for details",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "User or Dataset not found",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "Partial update Dataset",
                "tags": [
                    "DATASET"
                ]
            },
            "put": {
                "description": "Returns the updated Dataset",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID of Dataset to update",
                        "in": "path",
                        "name": "dataset_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DatasetReq"
                            }
                        }
                    },
                    "description": "Updated metadata for Dataset",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DatasetRsp"
                                }
                            }
                        },
                        "description": "Returned the updated Dataset",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "Bad request, see reply body for details",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "User or Dataset not found",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "Update Dataset",
                "tags": [
                    "DATASET"
                ]
            }
        },
        "/api/v1/orgs/{org_name}/datasets/{dataset_id}/jobs": {
            "get": {
                "description": "Returns the list of Jobs",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID for Dataset",
                        "in": "path",
                        "name": "dataset_id",
                        "required": true,
                        "schema": {
                            "maxLength": 36,
                            "pattern": ".*",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional skip for pagination",
                        "in": "query",
                        "name": "skip",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "maximum": 2147483647,
                            "minimum": 0,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Optional size for pagination",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "maximum": 2147483647,
                            "minimum": 0,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Optional sort",
                        "in": "query",
                        "name": "sort",
                        "required": false,
                        "schema": {
                            "enum": [
                                "date-descending",
                                "date-ascending"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DatasetJobList"
                                }
                            }
                        },
                        "description": "Returned list of Jobs",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "User or Dataset not found",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "List Jobs for Dataset",
                "tags": [
                    "DATASET"
                ]
            },
            "post": {
                "description": "Asynchronously starts a dataset action and returns corresponding Job ID",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID for Dataset",
                        "in": "path",
                        "name": "dataset_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DatasetActions"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "format": "uuid",
                                    "maxLength": 36,
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Returned the Job ID corresponding to requested Dataset Action",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "User or Dataset not found",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "Run Dataset Jobs",
                "tags": [
                    "DATASET"
                ]
            }
        },
        "/api/v1/orgs/{org_name}/datasets/{dataset_id}/jobs/{job_id}": {
            "delete": {
                "description": "delete Dataset Job",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID for Dataset",
                        "in": "path",
                        "name": "dataset_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID for Job",
                        "in": "path",
                        "name": "job_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully requested deletion of specified Job ID",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "Bad request, see reply body for details",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "User, Dataset or Job not found",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "Delete Dataset Job",
                "tags": [
                    "DATASET"
                ]
            },
            "get": {
                "description": "Returns the Job",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID of Dataset",
                        "in": "path",
                        "name": "dataset_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    },
                    {
                        "description": "Job ID",
                        "in": "path",
                        "name": "job_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DatasetJob"
                                }
                            }
                        },
                        "description": "Returned Job",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "User, Dataset or Job not found",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "Retrieve Job for Dataset",
                "tags": [
                    "DATASET"
                ]
            }
        },
        "/api/v1/orgs/{org_name}/datasets/{dataset_id}/jobs/{job_id}/logs": {
            "get": {
                "description": "Returns the job logs",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID of Dataset",
                        "in": "path",
                        "name": "dataset_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    },
                    {
                        "description": "Job ID",
                        "in": "path",
                        "name": "job_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "text/plain": {
                                "example": "Execution status: PASS"
                            }
                        },
                        "description": "Returned Job Logs",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "Job not exist or logs not found.",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "Get Job logs for Dataset",
                "tags": [
                    "DATASET"
                ]
            }
        },
        "/api/v1/orgs/{org_name}/datasets/{dataset_id}/jobs/{job_id}:cancel": {
            "post": {
                "description": "Cancel Dataset Job",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID for Dataset",
                        "in": "path",
                        "name": "dataset_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID for Job",
                        "in": "path",
                        "name": "job_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully requested cancelation of specified Job ID (asynchronous)",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "User, Dataset or Job not found",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "Cancel Dataset Job",
                "tags": [
                    "DATASET"
                ]
            }
        },
        "/api/v1/orgs/{org_name}/datasets/{dataset_id}/jobs/{job_id}:download": {
            "get": {
                "description": "Download the Artifacts produced by a given job",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID of Dataset",
                        "in": "path",
                        "name": "dataset_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    },
                    {
                        "description": "Job ID",
                        "in": "path",
                        "name": "job_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "format": "binary",
                                    "maxLength": 1000,
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Returned Job Artifacts",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "User, Dataset or Job not found",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "Download Job Artifacts",
                "tags": [
                    "DATASET"
                ]
            }
        },
        "/api/v1/orgs/{org_name}/datasets/{dataset_id}/specs/{action}/schema": {
            "get": {
                "description": "Returns the Specs schema for a given action",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID for Dataset",
                        "in": "path",
                        "name": "dataset_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    },
                    {
                        "description": "Action name",
                        "in": "path",
                        "name": "action",
                        "required": true,
                        "schema": {
                            "enum": [
                                "dataset_convert",
                                "convert",
                                "convert_efficientdet_tf2",
                                "kmeans",
                                "augment",
                                "train",
                                "evaluate",
                                "prune",
                                "retrain",
                                "export",
                                "gen_trt_engine",
                                "trtexec",
                                "inference",
                                "annotation",
                                "analyze",
                                "validate",
                                "generate",
                                "calibration_tensorfile"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Returned the Specs schema for given action",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "User, Dataset or Action not found",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "Retrieve Specs schema",
                "tags": [
                    "DATASET"
                ]
            }
        },
        "/api/v1/orgs/{org_name}/datasets:get_formats": {
            "post": {
                "description": "Given dataset type return dataset formats or return all formats",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LstStr"
                                }
                            }
                        },
                        "description": "Returns a list of dataset formats supported",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "Bad request, see reply body for details",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "Given dataset type return dataset formats or return all formats",
                "tags": [
                    "DATASET"
                ]
            }
        },
        "/api/v1/orgs/{org_name}/experiments": {
            "get": {
                "description": "Returns the list of Experiments",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional skip for pagination",
                        "in": "query",
                        "name": "skip",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "maximum": 2147483647,
                            "minimum": 0,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Optional size for pagination",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "maximum": 2147483647,
                            "minimum": 0,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Optional sort",
                        "in": "query",
                        "name": "sort",
                        "required": false,
                        "schema": {
                            "enum": [
                                "date-descending",
                                "date-ascending",
                                "name-descending",
                                "name-ascending"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional name filter",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "maxLength": 5000,
                            "pattern": ".*",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional type filter",
                        "in": "query",
                        "name": "type",
                        "required": false,
                        "schema": {
                            "enum": [
                                "vision",
                                "medical"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional network architecture filter",
                        "in": "query",
                        "name": "network_arch",
                        "required": false,
                        "schema": {
                            "enum": [
                                "detectnet_v2",
                                "unet",
                                "classification_tf2",
                                "efficientdet_tf2",
                                "action_recognition",
                                "classification_pyt",
                                "mal",
                                "ml_recog",
                                "ocdnet",
                                "ocrnet",
                                "optical_inspection",
                                "pointpillars",
                                "pose_classification",
                                "re_identification",
                                "deformable_detr",
                                "dino",
                                "segformer",
                                "visual_changenet",
                                "centerpose"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "allowEmptyValue": true,
                        "description": "Optional read_only filter",
                        "in": "query",
                        "name": "read_only",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Optional filter to select user owned experiments only",
                        "in": "query",
                        "name": "user_only",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Optional tag filter",
                        "in": "query",
                        "name": "tag",
                        "required": false,
                        "schema": {
                            "maxLength": 5000,
                            "pattern": ".*",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExperimentListRsp"
                                }
                            }
                        },
                        "description": "Returned the list of Experiments",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "List Experiments",
                "tags": [
                    "EXPERIMENT"
                ]
            },
            "post": {
                "description": "Returns the new Experiment",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExperimentReq"
                            }
                        }
                    },
                    "description": "Initial metadata for new Experiment (base_experiment or network_arch required)",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExperimentRsp"
                                }
                            }
                        },
                        "description": "Returned the new Experiment",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "Bad request, see reply body for details",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "Create new Experiment",
                "tags": [
                    "EXPERIMENT"
                ]
            }
        },
        "/api/v1/orgs/{org_name}/experiments/{experiment_id}": {
            "delete": {
                "description": "Cancels all related running jobs and returns the deleted Experiment",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID of Experiment to delete",
                        "in": "path",
                        "name": "experiment_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExperimentRsp"
                                }
                            }
                        },
                        "description": "Returned the deleted Experiment",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "User or Experiment not found",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "Delete Experiment",
                "tags": [
                    "EXPERIMENT"
                ]
            },
            "get": {
                "description": "Returns the Experiment",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID of Experiment to return",
                        "in": "path",
                        "name": "experiment_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExperimentRsp"
                                }
                            }
                        },
                        "description": "Returned the Experiment",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "User or Experiment not found",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "Retrieve Experiment",
                "tags": [
                    "EXPERIMENT"
                ]
            },
            "patch": {
                "description": "Returns the updated Experiment",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID of Experiment to update",
                        "in": "path",
                        "name": "experiment_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExperimentReq"
                            }
                        }
                    },
                    "description": "Updated metadata for Experiment",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExperimentRsp"
                                }
                            }
                        },
                        "description": "Returned the updated Experiment",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "Bad request, see reply body for details",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "User or Experiment not found",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "Partial update Experiment",
                "tags": [
                    "EXPERIMENT"
                ]
            },
            "put": {
                "description": "Returns the updated Experiment",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID of Experiment to update",
                        "in": "path",
                        "name": "experiment_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExperimentReq"
                            }
                        }
                    },
                    "description": "Updated metadata for Experiment",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExperimentRsp"
                                }
                            }
                        },
                        "description": "Returned the updated Experiment",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "Bad request, see reply body for details",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "User or Experiment not found",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "Update Experiment",
                "tags": [
                    "EXPERIMENT"
                ]
            }
        },
        "/api/v1/orgs/{org_name}/experiments/{experiment_id}/jobs": {
            "get": {
                "description": "Returns the list of Jobs",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID for Experiment",
                        "in": "path",
                        "name": "experiment_id",
                        "required": true,
                        "schema": {
                            "maxLength": 36,
                            "pattern": ".*",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional skip for pagination",
                        "in": "query",
                        "name": "skip",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "maximum": 2147483647,
                            "minimum": 0,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Optional size for pagination",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "maximum": 2147483647,
                            "minimum": 0,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Optional sort",
                        "in": "query",
                        "name": "sort",
                        "required": false,
                        "schema": {
                            "enum": [
                                "date-descending",
                                "date-ascending"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExperimentJobList"
                                }
                            }
                        },
                        "description": "Returned list of Jobs",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "User or Experiment not found",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "List Jobs for Experiment",
                "tags": [
                    "EXPERIMENT"
                ]
            },
            "post": {
                "description": "Asynchronously starts a Experiment Action and returns corresponding Job ID",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID for Experiment",
                        "in": "path",
                        "name": "experiment_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExperimentActions"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "format": "uuid",
                                    "maxLength": 36,
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Returned the Job ID corresponding to requested Experiment Action",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "User or Experiment not found",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "Run Experiment Jobs",
                "tags": [
                    "EXPERIMENT"
                ]
            }
        },
        "/api/v1/orgs/{org_name}/experiments/{experiment_id}/jobs/{job_id}": {
            "delete": {
                "description": "Delete Experiment Job",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID for Experiment",
                        "in": "path",
                        "name": "experiment_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID for Job",
                        "in": "path",
                        "name": "job_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully requested deletion of specified Job ID",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "User, Experiment or Job not found",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "Delete Experiment Job",
                "tags": [
                    "EXPERIMENT"
                ]
            },
            "get": {
                "description": "Returns the Job",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID of Experiment",
                        "in": "path",
                        "name": "experiment_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    },
                    {
                        "description": "Job ID",
                        "in": "path",
                        "name": "job_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExperimentJob"
                                }
                            }
                        },
                        "description": "Returned Job",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "User, Experiment or Job not found",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "Retrieve Job for Experiment",
                "tags": [
                    "EXPERIMENT"
                ]
            }
        },
        "/api/v1/orgs/{org_name}/experiments/{experiment_id}/jobs/{job_id}/logs": {
            "get": {
                "description": "Returns the job logs",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID of Experiment",
                        "in": "path",
                        "name": "experiment_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    },
                    {
                        "description": "Job ID",
                        "in": "path",
                        "name": "job_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional filter to retrieve logs from specific autoML experiment",
                        "in": "query",
                        "name": "automl_experiment_index",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "maximum": 2147483647,
                            "minimum": 0,
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "text/plain": {
                                "example": "Execution status: PASS"
                            }
                        },
                        "description": "Returned Job Logs",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "Job not exist or logs not found.",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "Get Job logs for Experiment",
                "tags": [
                    "EXPERIMENT"
                ]
            }
        },
        "/api/v1/orgs/{org_name}/experiments/{experiment_id}/jobs/{job_id}:automl_details": {
            "get": {
                "description": "Retrieve usable AutoML details",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID of Experiment",
                        "in": "path",
                        "name": "experiment_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    },
                    {
                        "description": "Job ID",
                        "in": "path",
                        "name": "job_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "format": "binary",
                                    "maxLength": 1000,
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Returned Job Artifacts",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "User, Experiment or Job not found",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "Retrieve usable AutoML details",
                "tags": [
                    "EXPERIMENT"
                ]
            }
        },
        "/api/v1/orgs/{org_name}/experiments/{experiment_id}/jobs/{job_id}:cancel": {
            "post": {
                "description": "Cancel Experiment Job or pause training",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID for Experiment",
                        "in": "path",
                        "name": "experiment_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID for Job",
                        "in": "path",
                        "name": "job_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully requested cancelation or training pause of specified Job ID",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "User, Experiment or Job not found",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "Cancel Experiment Job or pause training",
                "tags": [
                    "EXPERIMENT"
                ]
            }
        },
        "/api/v1/orgs/{org_name}/experiments/{experiment_id}/jobs/{job_id}:download": {
            "get": {
                "description": "Download the Artifacts produced by a given job",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID of Experiment",
                        "in": "path",
                        "name": "experiment_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    },
                    {
                        "description": "Job ID",
                        "in": "path",
                        "name": "job_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "format": "binary",
                                    "maxLength": 1000,
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Returned Job Artifacts",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "User, Experiment or Job not found",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "Download Job Artifacts",
                "tags": [
                    "EXPERIMENT"
                ]
            }
        },
        "/api/v1/orgs/{org_name}/experiments/{experiment_id}/jobs/{job_id}:get_epoch_numbers": {
            "post": {
                "description": "Get epoch numbers for the checkpoints present for this job",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID for Experiment",
                        "in": "path",
                        "name": "experiment_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID for Job",
                        "in": "path",
                        "name": "job_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "format": "uuid",
                                    "maxLength": 36,
                                    "type": "string"
                                }
                            }
                        },
                        "description": "List of epoch numbers",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "Bad request, see reply body for details",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "Get epoch numbers present for this job",
                "tags": [
                    "EXPERIMENT"
                ]
            }
        },
        "/api/v1/orgs/{org_name}/experiments/{experiment_id}/jobs/{job_id}:pause": {
            "post": {
                "description": "Pause Experiment Job - only for training",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID for Experiment",
                        "in": "path",
                        "name": "experiment_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID for Job",
                        "in": "path",
                        "name": "job_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully requested training pause of specified Job ID (asynchronous)",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "User, Experiment or Job not found",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "Pause Experiment Job - only for training",
                "tags": [
                    "EXPERIMENT"
                ]
            }
        },
        "/api/v1/orgs/{org_name}/experiments/{experiment_id}/jobs/{job_id}:publish_model": {
            "post": {
                "description": "Publish models to NGC private registry",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID for Experiment",
                        "in": "path",
                        "name": "experiment_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID for Job",
                        "in": "path",
                        "name": "job_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PublishModel"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "format": "uuid",
                                    "maxLength": 36,
                                    "type": "string"
                                }
                            }
                        },
                        "description": "String message for successful upload",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "User or Experiment not found",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "Publish models to NGC",
                "tags": [
                    "EXPERIMENT"
                ]
            }
        },
        "/api/v1/orgs/{org_name}/experiments/{experiment_id}/jobs/{job_id}:remove_published_model": {
            "post": {
                "description": "Remove models from NGC private registry",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID for Experiment",
                        "in": "path",
                        "name": "experiment_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID for Job",
                        "in": "path",
                        "name": "job_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PublishModel"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "format": "uuid",
                                    "maxLength": 36,
                                    "type": "string"
                                }
                            }
                        },
                        "description": "String message for successfull deletion",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "User or Experiment not found",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "Remove publish models from NGC",
                "tags": [
                    "EXPERIMENT"
                ]
            }
        },
        "/api/v1/orgs/{org_name}/experiments/{experiment_id}/jobs/{job_id}:resume": {
            "post": {
                "description": "Resume Experiment Job - train/retrain only",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID for Experiment",
                        "in": "path",
                        "name": "experiment_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID for Job",
                        "in": "path",
                        "name": "job_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JobResume"
                            }
                        }
                    },
                    "description": "Adjustable metadata for the resumed job.",
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "Successfully requested resume of specified Job ID (asynchronous)",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "User, Experiment or Job not found",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "Resume Experiment Job",
                "tags": [
                    "EXPERIMENT"
                ]
            }
        },
        "/api/v1/orgs/{org_name}/experiments/{experiment_id}/specs/{action}/schema": {
            "get": {
                "description": "Returns the Specs schema for a given action",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID for Experiment",
                        "in": "path",
                        "name": "experiment_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    },
                    {
                        "description": "Action name",
                        "in": "path",
                        "name": "action",
                        "required": true,
                        "schema": {
                            "enum": [
                                "dataset_convert",
                                "convert",
                                "convert_efficientdet_tf2",
                                "kmeans",
                                "augment",
                                "train",
                                "evaluate",
                                "prune",
                                "retrain",
                                "export",
                                "gen_trt_engine",
                                "trtexec",
                                "inference",
                                "annotation",
                                "analyze",
                                "validate",
                                "generate",
                                "calibration_tensorfile"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Returned the Specs schema for given action",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "Dataset or Action not found",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "Retrieve Specs schema",
                "tags": [
                    "EXPERIMENT"
                ]
            }
        },
        "/api/v1/orgs/{org_name}/experiments/{experiment_id}/specs/{action}/schema:base": {
            "get": {
                "description": "Returns the Specs schema for a given action of the base experiment",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID for Base Experiment",
                        "in": "path",
                        "name": "experiment_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    },
                    {
                        "description": "Action name",
                        "in": "path",
                        "name": "action",
                        "required": true,
                        "schema": {
                            "enum": [
                                "train",
                                "evaluate",
                                "prune",
                                "retrain",
                                "export",
                                "gen_trt_engine",
                                "trtexec",
                                "inference",
                                "generate"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Returned the Specs schema for given action",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "Action not found or Base spec file not present",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "Retrieve Base Experiment Specs schema",
                "tags": [
                    "EXPERIMENT"
                ]
            }
        },
        "/api/v1/orgs/{org_name}/experiments/{experiment_id}:cancel_all_jobs": {
            "post": {
                "description": "Cancel all Jobs under experiment",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID for Experiment",
                        "in": "path",
                        "name": "experiment_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully canceled all jobs under experiments",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "User, Experiment or Job not found",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "Cancel all Jobs under experiment",
                "tags": [
                    "EXPERIMENT"
                ]
            }
        },
        "/api/v1/orgs/{org_name}/experiments:base": {
            "get": {
                "description": "Returns the list of models published in NGC public catalog and private org's model registry",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional skip for pagination",
                        "in": "query",
                        "name": "skip",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "maximum": 2147483647,
                            "minimum": 0,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Optional size for pagination",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "maximum": 2147483647,
                            "minimum": 0,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Optional sort",
                        "in": "query",
                        "name": "sort",
                        "required": false,
                        "schema": {
                            "enum": [
                                "date-descending",
                                "date-ascending",
                                "name-descending",
                                "name-ascending"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional name filter",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "maxLength": 5000,
                            "pattern": ".*",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional type filter",
                        "in": "query",
                        "name": "type",
                        "required": false,
                        "schema": {
                            "enum": [
                                "vision",
                                "medical"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional network architecture filter",
                        "in": "query",
                        "name": "network_arch",
                        "required": false,
                        "schema": {
                            "enum": [
                                "detectnet_v2",
                                "unet",
                                "classification_tf2",
                                "efficientdet_tf2",
                                "action_recognition",
                                "classification_pyt",
                                "mal",
                                "ml_recog",
                                "ocdnet",
                                "ocrnet",
                                "optical_inspection",
                                "pointpillars",
                                "pose_classification",
                                "re_identification",
                                "deformable_detr",
                                "dino",
                                "segformer",
                                "visual_changenet",
                                "centerpose"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "allowEmptyValue": true,
                        "description": "Optional read_only filter",
                        "in": "query",
                        "name": "read_only",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Optional filter to select user owned experiments only",
                        "in": "query",
                        "name": "user_only",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExperimentListRsp"
                                }
                            }
                        },
                        "description": "Returned the list of Experiments",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "List Experiments that can be used for transfer learning",
                "tags": [
                    "EXPERIMENT"
                ]
            }
        },
        "/api/v1/orgs/{org_name}/workspaces": {
            "get": {
                "description": "Returns the list of workspaces",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional skip for pagination",
                        "in": "query",
                        "name": "skip",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "maximum": 2147483647,
                            "minimum": 0,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Optional size for pagination",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "maximum": 2147483647,
                            "minimum": 0,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Optional sort",
                        "in": "query",
                        "name": "sort",
                        "required": false,
                        "schema": {
                            "enum": [
                                "date-descending",
                                "date-ascending",
                                "name-descending",
                                "name-ascending"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional name filter",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "maxLength": 5000,
                            "pattern": ".*",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional format filter",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "enum": [
                                "medical",
                                "unet",
                                "custom"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional type filter",
                        "in": "query",
                        "name": "type",
                        "required": false,
                        "schema": {
                            "enum": [
                                "object_detection",
                                "semantic_segmentation",
                                "image_classification"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/WorkspaceRsp"
                                    },
                                    "maxItems": 2147483647,
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Returned list of workspaces",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "List workspaces",
                "tags": [
                    "WORKSPACE"
                ]
            },
            "post": {
                "description": "Returns the new Workspace",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkspaceReq"
                            }
                        }
                    },
                    "description": "Initial metadata for new Workspace (type and format required)",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspaceRsp"
                                }
                            }
                        },
                        "description": "Retuned the new Workspace",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "Bad request, see reply body for details",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "Create new Workspace",
                "tags": [
                    "WORKSPACE"
                ]
            }
        },
        "/api/v1/orgs/{org_name}/workspaces/{workspace_id}": {
            "delete": {
                "description": "Cancels all related running jobs and returns the deleted Workspace",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID of Workspace to delete",
                        "in": "path",
                        "name": "workspace_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspaceRsp"
                                }
                            }
                        },
                        "description": "Deleted Workspace",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "Bad request, see reply body for details",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "User or Workspace not found",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "Delete Workspace",
                "tags": [
                    "WORKSPACE"
                ]
            },
            "get": {
                "description": "Returns the Workspace",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID of Workspace to return",
                        "in": "path",
                        "name": "workspace_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspaceRsp"
                                }
                            }
                        },
                        "description": "Returned Workspace",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "User or Workspace not found",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "Retrieve Workspace",
                "tags": [
                    "WORKSPACE"
                ]
            },
            "patch": {
                "description": "Returns the updated Workspace",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID of Workspace to update",
                        "in": "path",
                        "name": "workspace_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkspaceReq"
                            }
                        }
                    },
                    "description": "Updated metadata for Workspace",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspaceRsp"
                                }
                            }
                        },
                        "description": "Returned the updated Workspace",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "Bad request, see reply body for details",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "User or Workspace not found",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "Partial update Workspace",
                "tags": [
                    "WORKSPACE"
                ]
            },
            "put": {
                "description": "Returns the updated Workspace",
                "parameters": [
                    {
                        "description": "Org Name",
                        "in": "path",
                        "name": "org_name",
                        "required": true,
                        "schema": {
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID of Workspace to update",
                        "in": "path",
                        "name": "workspace_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkspaceReq"
                            }
                        }
                    },
                    "description": "Updated metadata for Workspace",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspaceRsp"
                                }
                            }
                        },
                        "description": "Returned the updated Workspace",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "Bad request, see reply body for details",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRsp"
                                }
                            }
                        },
                        "description": "User or Workspace not found",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "$ref": "#/components/headers/Access-Control-Allow-Origin"
                            },
                            "X-RateLimit-Limit": {
                                "$ref": "#/components/headers/X-RateLimit-Limit"
                            }
                        }
                    }
                },
                "summary": "Update Workspace",
                "tags": [
                    "WORKSPACE"
                ]
            }
        }
    },
    "security": [
        {
            "bearer-token": []
        }
    ],
    "tags": [
        {
            "description": "Endpoints related to User Authentication",
            "name": "AUTHENTICATION"
        },
        {
            "description": "Endpoints related to Datasets",
            "name": "DATASET"
        },
        {
            "description": "Endpoints related to Experiments",
            "name": "EXPERIMENT"
        },
        {
            "description": "NSPECT-1T59-RTYH",
            "externalDocs": {
                "url": "https://nspect.nvidia.com/review?id=NSPECT-1T59-RTYH"
            },
            "name": "nSpectId"
        }
    ]
}
