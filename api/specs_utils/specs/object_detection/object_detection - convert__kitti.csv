parameter,display_name,value_type,description,default_value,examples,valid_min,valid_max,valid_options,required,popular,regex,notes
kitti_config,,collection,,,,,,,,,,
kitti_config.root_directory_path,,hidden,,,,,,,,,,
kitti_config.image_dir_name,,const,,images,,,,,,,,
kitti_config.label_dir_name,,const,,labels,,,,,,,,
kitti_config.point_clouds_dir,,string,,,,,,,,,,
kitti_config.calibrations_dir,,string,,,,,,,,,,
kitti_config.kitti_sequence_to_frames_file,,string,The name of the KITTI sequence to frame mapping file. This file must be present within the dataset root as mentioned in the root_directory_path.,,,,,,,,,This file must be uploaded by the user along with images and labels. The name of that file must be filled in this field
kitti_config.image_extension,,string,The extension of the images in the image_dir_name parameter.,.png,".jpg, .png, .jpeg",,,,yes,yes,,
kitti_config.num_partitions,,integer,"The number of partitions to use to split the data (N folds). This field is ignored when the partition model is set to random, as by default only two partitions are generated: val and train. In sequence mode, the data is split into n-folds. The number of partitions is ideally fewer than the total number of sequences in the kitti_sequence_to_frames file. Valid options: n=2 for random partition, n< number of sequences in the kitti_sequence_to_frames_file",2,,,,,,,,
kitti_config.num_shards,,integer,The number of shards per fold.,10,,1,20,,,,,
kitti_config.partition_mode,,string,"The method employed when partitioning the data to multiple folds. Two methods are supported:
Random partitioning: The data is divided in to 2 folds, train and val. This mode requires that the val_split parameter be set.
Sequence-wise partitioning: The data is divided into n partitions (defined by the num_partitions parameter) based on the number of sequences available.",random,,,,"random, sequence",,,,
kitti_config.val_split,,float,The percentage of data to be separated for validation. This only works under "random" partition mode. This partition is available in fold 0 of the TFrecords generated. Set the validation fold to 0 in the dataset_config.,0,,0,100,,,,,"Must not be exposed from API since each dataset is its own and cannot be split into train, val, test, etc... through the API"
sample_modifier_config,,collection,,,,,,,,,,
sample_modifier_config.filter_samples_containing_only,,list,list of string,,,,,,,,,
sample_modifier_config.dominant_target_classes,,list,list of string,,,,,,,,,
sample_modifier_config.minimum_target_class_imbalance,,list,,,,,,,,,,
sample_modifier_config.minimum_target_class_imbalance.key,,string,,,,,,,,,,
sample_modifier_config.minimum_target_class_imbalance.value,,float,,,,,,,,,,
sample_modifier_config.num_duplicates,,integer,,,,,,,,,,
sample_modifier_config.max_training_samples,,integer,,,,,,,,,,
sample_modifier_config.source_to_target_class_mapping,,list,,,,,,,,,,
sample_modifier_config.source_to_target_class_mapping.key,,string,,,,,,,,,,
sample_modifier_config.source_to_target_class_mapping.value,,string,,,,,,,,,,
image_directory_path,,hidden,,,,,,,,,,
target_class_mapping,,list,,,,,,,,,,Better not expose these on dataset convert and use the target_class_mapping in the train / eval / inference spec
target_class_mapping.key,Class Key,string,,,,,,,,,,
target_class_mapping.value,Class Value,string,,,,,,,,,,