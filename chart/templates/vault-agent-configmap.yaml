# Copyright (c) 2024, NVIDIA CORPORATION.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-agent-configmap
  namespace: {{ .Release.Namespace }}
{{- if .Values.enableVault }}
data:
  config.hcl: | 
    "auto_auth" = {
      "method" = {
        "type" = "jwt"
        "mount_path" = "{{ .Values.vault.authPath }}"
        "namespace" = "{{ .Values.vault.namespace }}"
        "config" = {
          "path" = "{{ .Values.vault.volumeMounts.tokenPath }}/token"
          "role" = "{{ .Values.vault.appRole }}"
          skip_jwt_cleanup = true
        }
      }
      "sink" = {
        "config" = {
          "path" = "/home/vault/.token"
        }
        "type" = "file"
      }
    }
    "exit_after_auth" = false
    "pid_file" = "/home/vault/.pid"
    "template" = {
      "source" = "/vault/configs/template.hcl"
      "destination" = "{{ .Values.vault.secretMountPath }}"
      error_on_missing_key = true
    }
    "vault" = {
      "address" = "{{ .Values.vault.volumes.projected.serviceAccountToken.audience }}"
    }
  config-init.hcl: | 
    "auto_auth" = {
      "method" = {
        "type" = "jwt"
        "mount_path" = "{{ .Values.vault.authPath }}"
        "namespace" = "{{ .Values.vault.namespace }}"
        "config" = {
          "path" = "{{ .Values.vault.volumeMounts.tokenPath }}/token"
          "role" = "{{ .Values.vault.appRole }}"
          skip_jwt_cleanup = true
        }
      }
      "sink" = {
        "config" = {
         "path" = "/home/vault/.token-init"
        }
        "type" = "file"
      }
    }
    "exit_after_auth" = true
    "pid_file" = "/home/vault/.pid"
    "template" = {
      "source" = "/vault/configs/template.hcl"
      "destination" = "{{ .Values.vault.secretMountPath }}"
      error_on_missing_key = true
    }
    "vault" = {
      "address" = "{{ .Values.vault.volumes.projected.serviceAccountToken.audience }}"
    }
  template.hcl: |- 
    {
      "kv": {
        "k8s": {
          {{`{{- with secret `}}"{{ .Values.vault.secretEnginePath }}"{{` -}}`}}
          {{`{{- range $k, $v := .Data.data }}`}}
          {{`"{{ $k }}"`}}: {{`"{{ $v }}"`}}
          {{`{{- end }}`}}
          {{`{{- end }}`}}
        }
      }
    }
{{- end }}
