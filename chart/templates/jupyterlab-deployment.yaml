# Copyright (c) 2023, NVIDIA CORPORATION.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{{- if .Values.ngcCollaterals }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-jupyterlab-pod
  namespace: {{ .Release.Namespace }}
  labels:
    name: {{ .Release.Name }}-jupyterlab-pod
spec:
  replicas: 1
  selector:
    matchLabels:
      name: {{ .Release.Name }}-jupyterlab-pod
  template:
    metadata:
      name: {{ .Release.Name }}-jupyterlab-pod
      namespace: {{ .Release.Namespace }}
      labels:
        name: {{ .Release.Name }}-jupyterlab-pod
    spec:
      containers:
      - name: {{ .Release.Name }}-jupyterlab
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.imagePullPolicy | default "Always" }}
        command: ["/bin/bash", "jupyterlab_start.sh"]
        env:
        - name: NGC_COLLATERALS
          value: {{ .Values.ngcCollaterals | default "nvidia/tao/tao-getting-started:5.0.0" | quote }}
        - name: NOTEBOOKS_DIR
          value: {{ .Values.notebooksDir | default "tao-getting-started_v5.0.0/notebooks/tao_api_starter_kit" | quote }}
        - name: NGC_CLI_API_KEY
          value: {{ .Values.ngcApiKey | default "" | quote }}
        - name: NGC_CLI_ORG
          value: {{ hasKey .Values "ngcApiKey" | ternary "nvidia" "" | quote }}
        - name: PYTHONIOENCODING 
          value: utf-8
        - name: LC_ALL 
          value: C.UTF-8 
{{- if .Values.httpsProxy }}
        - name: HTTPS_PROXY
          value: {{ .Values.httpsProxy | default "" | quote }}
        - name: https_proxy
          value: {{ .Values.httpsProxy | default "" | quote }}
{{- end }}
{{- if .Values.myCertConfig }}
        - name: CURL_CA_BUNDLE
          value: "/etc/ssl/certs/ca-certificates.crt"
        - name: REQUESTS_CA_BUNDLE
          value: "/etc/ssl/certs/ca-certificates.crt"
        - name: SSL_CERT_FILE
          value: "/etc/ssl/certs/ca-certificates.crt"
{{- end }}
        ports:
        - containerPort: 8888
        volumeMounts:
        - name: tutorials
          mountPath: /opt/api/{{ .Values.notebooksDir | default "tao-getting-started_v5.0.0/notebooks/tao_api_starter_kit" }}/tutorials/
        - name: kubectl
          mountPath: /usr/local/bin/kubectl
          subPath: kubectl
{{- if .Values.myCertConfig }}
        - name: my-cert
          mountPath: /usr/local/share/ca-certificates/
{{- end }}
        securityContext:
          privileged: true
      initContainers:
      - name: install-kubectl
        image: allanlei/kubectl
        imagePullPolicy: Always
        command: ["cp", "/usr/local/bin/kubectl", "/data/kubectl"]
        volumeMounts:
        - mountPath: /data
          name: kubectl
      terminationGracePeriodSeconds: 3
{{- if .Values.imagePullSecret }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecret }}
{{- end }}
      volumes:
      - name: tutorials
        configMap:
          name: {{ .Release.Name }}-tutorials-configmap
          items:
          - key: automl.ipynb
            path: automl.ipynb
          - key: yolo_optimization.ipynb
            path: yolo_optimization.ipynb
          - key: yolo_training.ipynb
            path: yolo_training.ipynb
      - emptyDir: {}
        name: kubectl
{{- if .Values.myCertConfig }}
      - name: my-cert
        configMap:
          name: {{ .Values.myCertConfig }}
          items:
          - key: my-cert.crt
            path: my-cert.crt
{{- end }}
{{- end }}
